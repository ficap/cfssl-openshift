---
kind: Template
apiVersion: v1
metadata:
  name: cfssl
  annotations:
    openshift.io/display-name: CFSSL
    description: |-
      Some description may come later
    iconClass: icon-go-gopher

#    template.openshift.io/bindable: 'false'

message: |-
  Something magic was created

objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${NAME}-secret"

    type: Opaque
    stringData:
      ca.pem: "${CA}"
      ca-key.pem: "${CA_KEY}"


  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${NAME}

    data:
      bind-address: ${BIND_ADDRESS}
      loglevel: ${LOGLEVEL}


  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: cfssl
      annotations:
        description: Keeps track of changes in the application image


  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: cfssl
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      source:
        git:
          uri: https://github.com/ficap/cfssl-openshift
          ref: master

      strategy:
        type: Docker

      output:
        to:
          kind: ImageStreamTag
          name: "cfssl:latest"

      triggers:
        - type: ImageChange
        - type: ConfigChange


  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: cfssl
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      strategy:
        type: Recreate
        recreateParams:
          pre:
            failurePolicy: Retry
            execNewPod:
              command: [ "/bin/entrypoint.sh", "/go/bin/goose",  "-path", "/go/src/github.com/cloudflare/cfssl/certdb/pg", "-env", "production", "up" ]
              containerName: cfssl
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - cfssl
            from:
              kind: ImageStreamTag
              name: cfssl:latest
        - type: ConfigChange

      replicas: 1
      selector:
        name: cfssl
      template:
        metadata:
          name: cfssl
          labels:
            name: cfssl
        spec:
          containers:
            - name: cfssl
              image: " "
              ports:
                - containerPort: 8888
              readinessProbe:
                timeoutSeconds: 1
                initialDelaySeconds: 5
                httpGet:
                  path: "/"
                  port: 8888

              livenessProbe:
                timeoutSeconds: 1
                initialDelaySeconds: 30
                tcpSocket:
                  port: 8888

              env:
                - name: BIND_ADDRESS
                  valueFrom:
                    configMapKeyRef:
                      name: ${NAME}
                      key: bind-address

                - name: LOGLEVEL
                  valueFrom:
                    configMapKeyRef:
                      name: ${NAME}
                      key: loglevel

                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-db
                      key: database-user

                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-db
                      key: database-password

                - name: NAME
                  value: ${NAME}

              volumeMounts:
                - name: ${NAME}-secret-volume
                  mountPath: "/var/lib/cfssl/data"
                  readOnly: true

              imagePullPolicy: IfNotPresent

          volumes:
            - name: ${NAME}-secret-volume
              secret:
                secretName: ${NAME}-secret


  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      annotations:
        template.openshift.io/expose-service_ip_port: "{.spec.clusterIP}:{.spec.ports[?(.name==\"cfssl\")].port}"
        service.alpha.openshift.io/dependencies: '[{"name": "cfssl-db",
                "kind": "Service"}]'
    spec:
      ports:
        - name: "cfssl"
          port: 8888
      selector:
        name: cfssl


  - kind: Route
    apiVersion: v1
    metadata:
      name: "cfssl"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: Service
        name: cfssl


  - kind: Secret
    apiVersion: v1
    metadata:
      name: "cfssl-db"
      annotations:
        template.openshift.io/expose-username: "{.data['database-user']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-database_name: "{.data['database-name']}"
    stringData:
      database-user: "${POSTGRESQL_USER}"
      database-password: "${POSTGRESQL_PASSWORD}"
      database-name: "cfssl"



  - kind: Service
    apiVersion: v1
    metadata:
      name: "cfssl-db"
      annotations:
        template.openshift.io/expose-uri: "postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"
    spec:
      ports:
        - name: postgresql
          protocol: TCP
          port: 5432
          targetPort: 5432
          nodePort: 0
      selector:
        name: "cfssl-db"
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}


  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "cfssl-db"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "512Mi"

      storageClassName: ${POSTGRESQL_STORAGE_CLASS}


  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "cfssl-db"
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:9.6
              namespace: openshift
            lastTriggeredImage: ''
        - type: ConfigChange
      replicas: 1
      selector:
        name: "cfssl-db"
      template:
        metadata:
          labels:
            name: "cfssl-db"
        spec:
          containers:
            - name: postgresql
              image: " "
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                timeoutSeconds: 1
                initialDelaySeconds: 5
                exec:
                  command:
                    - "/usr/libexec/check-container"
              livenessProbe:
                timeoutSeconds: 10
                initialDelaySeconds: 120
                exec:
                  command:
                    - "/usr/libexec/check-container"
                    - "--live"
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: "cfssl-db"
                      key: database-user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "cfssl-db"
                      key: database-password
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: "cfssl-db"
                      key: database-name
              resources:
                limits:
                  memory: "256Mi"
              volumeMounts:
                - name: "cfssl-db-data"
                  mountPath: "/var/lib/pgsql/data"
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: IfNotPresent
              capabilities: {}
              securityContext:
                capabilities: {}
                privileged: false
          volumes:
            - name: "cfssl-db-data"
              persistentVolumeClaim:
                claimName: "cfssl-db"
          restartPolicy: Always
          dnsPolicy: ClusterFirst
    status: {}


parameters:
  - name: NAME
    required: true

  - name: APPLICATION_DOMAIN
    required: true

  - name: BIND_ADDRESS
    description: Address to bind
    value: 0.0.0.0
    required: true

  - name: CA
    description: CA used to sign the new certificate
    required: true

  - name: CA_KEY
    description: CA private key
    required: true

  - name: LOGLEVEL
    description: Log level (0 = DEBUG, 5 = FATAL)
    value: "1"
    required: true

  - name: POSTGRESQL_USER
    value: test

  - name: POSTGRESQL_PASSWORD
    value: test

  - name: POSTGRESQL_STORAGE_CLASS
    value: glusterfs-storage

